[{"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/index.js":"1","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/App.js":"2","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/reportWebVitals.js":"3","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Home.js":"4","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Signup.js":"5","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Profile.js":"6","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Login.js":"7","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/index.js":"8","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/queries.js":"9","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/auth.js":"10","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/mutations.js":"11","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/projectList/index.js":"12","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/addProject/index.js":"13","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Project.js":"14","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/FolderList.js":"15","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Folders.js":"16","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderModal.js":"17","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/FrontEndFileList.js":"18","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndModal.js":"19","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEnd.js":"20","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderInFolderModal.js":"21","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndModal.js":"22","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/BackEndFileList.js":"23"},{"size":500,"mtime":1627551658103,"results":"24","hashOfConfig":"25"},{"size":2259,"mtime":1627551658099,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1627551658106,"results":"27","hashOfConfig":"25"},{"size":222,"mtime":1627551658105,"results":"28","hashOfConfig":"25"},{"size":2655,"mtime":1627551658106,"results":"29","hashOfConfig":"25"},{"size":1809,"mtime":1627551658105,"results":"30","hashOfConfig":"25"},{"size":2500,"mtime":1627551658105,"results":"31","hashOfConfig":"25"},{"size":1213,"mtime":1627551658100,"results":"32","hashOfConfig":"25"},{"size":1413,"mtime":1627551658108,"results":"33","hashOfConfig":"25"},{"size":1043,"mtime":1627551658107,"results":"34","hashOfConfig":"25"},{"size":3000,"mtime":1627552101810,"results":"35","hashOfConfig":"25"},{"size":2381,"mtime":1627551658102,"results":"36","hashOfConfig":"25"},{"size":2783,"mtime":1627551658101,"results":"37","hashOfConfig":"25"},{"size":2077,"mtime":1627552892434,"results":"38","hashOfConfig":"25"},{"size":1750,"mtime":1627551658102,"results":"39","hashOfConfig":"25"},{"size":1777,"mtime":1627551658104,"results":"40","hashOfConfig":"25"},{"size":3467,"mtime":1627551658101,"results":"41","hashOfConfig":"25"},{"size":1803,"mtime":1627552255888,"results":"42","hashOfConfig":"25"},{"size":3338,"mtime":1627551658101,"results":"43","hashOfConfig":"25"},{"size":139,"mtime":1627551658104,"results":"44","hashOfConfig":"25"},{"size":3525,"mtime":1627551658100,"results":"45","hashOfConfig":"25"},{"size":3332,"mtime":1627551658100,"results":"46","hashOfConfig":"25"},{"size":1797,"mtime":1627552947198,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"j65y6h",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/index.js",[],["106","107"],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/App.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/reportWebVitals.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Home.js",["108"],"import React from 'react';\nimport { useQuery } from '@apollo/client';\n\n\nconst Home = () => {\n  \n\n  return (\n    <main>\n      <div className=\"flex-row justify-center\">\n      </div>\n    </main>\n  );\n};\n\nexport default Home;\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Signup.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Profile.js",["109","110","111","112","113","114","115","116","117"],"import React, { useState, useEffect } from 'react';\nimport { Redirect, useParams, useHistory } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { QUERY_USER, QUERY_ME } from '../utils/queries';\n\nimport ProjectList from '../components/projectList/index'\nimport AddNewProject from '../components/addProject/index'\n\nimport { ADD_PROJECT } from '../utils/mutations';\n\n// import './addProject.css'\n\n// import Auth from '../../utils/auth';\n\nimport './Profile.css'\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(QUERY_ME);\n  \n  const user = data?.me || {};  \n\n  const [projectName, setProjectName] = useState('')\n  const [characterCount, setCharacterCount] = useState(0)\n\n  \n      if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n        return <Redirect to=\"/me\" />;\n      }\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n\n  return (\n    <div>\n      <h2 className=\"headingContainer\">\n          {userParam ? `${user.username}'s` : 'Your'} Collections\n      </h2>\n      <div className='profileContainer'>\n        {!userParam && (\n          <div\n            className=\"projectForm\"\n          >\n            <AddNewProject />\n          </div>\n        )}\n        \n        <div className='mainListContainer'>\n        \n          <ProjectList \n            projects={user.projects}\n            title={`${user.username}'s thoughts...`}\n            showTitle={false}\n            showUsername={false}/>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Login.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/index.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/queries.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/auth.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/mutations.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/projectList/index.js",["118","119","120"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './projectList.css'\nimport { useMutation } from '@apollo/client';\n\n\n\nimport { REMOVE_PROJECT } from '../../utils/mutations';\n\nconst ProjectList = ({ \n    projects,\n    title,\n    showTitle = true,\n    showUsername = true, }) => {\n\n    const [removeProject, { error }] = useMutation(REMOVE_PROJECT)\n\n    \n    \n    const deleteProject = async (projectID) => {\n        try {\n            const { data } = await removeProject({\n                variables: { filter: projectID }\n            })\n\n        } catch (err) {\n            console.error(err);\n          }\n        \n    }\n\n    if (!projects.length) {\n        return <h1>No projects yet</h1>\n    }\n    else{\n        return (\n            <div className='listContainer'>\n                {showTitle && <h3>{title}</h3>}\n                {projects && projects.map((project) => (\n                    \n                    <div key={project._id} className='collectionCard'>\n                        <Link className='link' to={`/projects/${project._id}`}>\n                        {showUsername ? (\n                            <div className='cardHeader'>\n                                <Link to={`/profiles/${project.projectAuthor}`}>\n                                    <p className='createdText'>Created on {project.createdAt}</p>\n                                </Link>\n                            </div>\n                        ) : (\n                            <div className='cardHeader'>\n                                <p className='createdText'>Created on {project.createdAt}</p>\n                                <a className='closeButton' onClick={() => {\n                                    deleteProject(project._id);\n                                    window.location.reload()\n                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                            </div>\n                        )}\n                        <div className='cardBody'>\n                            <h2>{project.projectName}</h2>\n                        </div>  \n                        </Link>            \n                    </div>\n                    \n                ))}\n            </div>\n        )\n    }\n\n    \n}\n\nexport default ProjectList;","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/addProject/index.js",["121"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_PROJECT } from '../../utils/mutations';\n\nimport './addProject.css'\n\nimport Auth from '../../utils/auth';\n\nconst AddNewProject = () => {\n    const [projectName, setProjectName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const [addProject, { error }] = useMutation(ADD_PROJECT)\n   \n\n  \n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addProject({\n            variables: {\n              projectName,\n              projectAuthor: Auth.getProfile().data.username,\n            },\n          });\n          setProjectName('');\n          setCharacterCount(0)\n          window.location.reload()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'projectName' && value.length <= 30) {\n          setProjectName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n      return (\n          <div className='formContainer'>\n              <h2>Add a new collection</h2>\n\n              {Auth.loggedIn() ? (\n                  <>\n                    <form className='addProjectForm' onSubmit={handleFormSubmit}>\n                        <div className='formContainer'>\n                            <input \n                            name='projectName' \n                            placeholder='Collection Name'\n                            value={projectName}\n                            className='projectInput'\n                            onChange={handleChange}\n                            ></input>\n                        </div>\n                        <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n                        Character Count: {characterCount}/30\n                        </p>\n                        <div>\n                            <button className='button' type='submit'>\n                                Add Collection\n                            </button>\n                        </div>\n                        {error && (\n                        <div className=\"errorMessage\">\n                            {error.message}\n                        </div>\n                        )}\n                    </form>\n                  </>\n              ) : (\n                <p>\n                You need to be logged in to share your thoughts. Please{' '}\n                <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n              </p>\n              )}\n          </div>\n      )\n}\n\nexport default AddNewProject","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Project.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/FolderList.js",["122","123","124"],"import React from 'react'\nimport './FolderList.css'\nimport { Link } from 'react-router-dom';\n\n\nimport { useMutation } from '@apollo/client';\n\n\nimport { REMOVE_FOLDER } from '../../utils/mutations';\n\n\nfunction FolderList({ folders = [] }) {\n\n    const [removeFolder, { error }] = useMutation(REMOVE_FOLDER)\n\n    \n    \n    const deleteFolder = async (folderID) => {\n        try {\n            const { data } = await removeFolder({\n                variables: { filter: folderID }\n            })\n\n        } catch (err) {\n            console.error(err);\n          }\n        \n    }\n\n    if (!folders.length) {\n        return (\n            <h3>No Folders Yet</h3>\n        )\n    }\n\n    return (\n        <>\n            {folders && folders.map((folder) => {\n                return (\n                    <div  key={folder._id} className=\"folderDiv\">  \n                        <Link className='link' to={`/folder/${folder._id}`}>\n                        <div className='folderHeader'>\n                        {/* <p>Created on {folder.createdAt}</p> */}\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFolder(folder._id);\n                                    window.location.reload()\n                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{folder.folderName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n        </>\n    )\n}\n\nexport default FolderList\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Folders.js",["125","126"],"import React, { useState} from 'react'\nimport './Folder.css'\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_FOLDER} from '../utils/queries';\n\nimport FolderList from '../components/fileLists/FolderList'\nimport FolderInFolderModal from '../components/Modal/FolderInFolderModal';\nimport FrontEndFileList from '../components/fileLists/FrontEndFileList';\n\n\nfunction Folders() {\n\n    const { folderID } = useParams()\n\n    const { loading, data } = useQuery(QUERY_SINGLE_FOLDER, {\n        variables: { folderID: folderID }\n    })\n\n    const folders = data?.folder || {};    \n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <div className='projectContainer'> \n            <div className='fileContainer'>\n                <h3>Folders</h3>\n                <div className='files'>\n                    <FolderInFolderModal />\n                    <div className='theFolders'>\n                        <FolderList folders={folders.folders}/>\n                    </div>\n                    \n\n                </div>\n\n            </div>\n            <div className='fileContainer'>\n                <h3>Front End Files</h3>\n                <div className='files'>\n                    \n                    <div className='theFolders'>\n                        <FrontEndFileList folders={folders.frontEndFiles}/>\n                    </div>\n                </div>\n                \n            </div>\n            <div className='fileContainer'>\n                <h3>Back End Files</h3>\n                <div className='files'>\n                    \n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Folders\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderModal.js",["127","128","129"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_FOLDER_TO_PROJECT } from '../../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\nfunction FolderModal() {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  const [folderName, setFolderName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addFolder, { error }] = useMutation(ADD_FOLDER_TO_PROJECT)\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addFolder({\n            variables: {\n              folderName,\n              projectID: projectID,\n            },\n          });\n          setFolderName('');\n          setCharacterCount(0)\n          window.location.reload()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'folderName' && value.length <= 30) {\n            setFolderName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })\n\n    const projects = data?.project || {};\n    \n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n  return (\n    <div>\n      <button onClick={openModal}>Add Folder</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add Folder\"\n      >\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Add a folder</h2>\n        \n        <div>I am a modal</div>\n        <form className='addFolderForm' onSubmit={handleFormSubmit}>\n            <div className='formContainer'>\n                <input \n                name='folderName' \n                placeholder='Folder Name'\n                value={folderName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n            <div>\n                <button className='button' type='submit'>\n                    Add Folder\n                </button>\n            </div>\n            {error && (\n            <div className=\"errorMessage\">\n                {error.message}\n            </div>\n            )}\n        </form>\n        <button onClick={closeModal}>close</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/FrontEndFileList.js",["130","131","132"],"import React from 'react'\n\n\nimport { Link, useParams } from 'react-router-dom';\n\n\nimport { useMutation } from '@apollo/client';\n\n\nimport { REMOVE_FRONT_END_FILE } from '../../utils/mutations';\n\nfunction FrontEndFileList({ files = [] }) {\n\n    const [removeFrontFile, { error }] = useMutation(REMOVE_FRONT_END_FILE)\n    \n    const { projectID } = useParams()\n    \n    \n    const deleteFrontFile = async (fileID) => {\n        try {\n            const { data } = await removeFrontFile({\n                variables: { \n                    filter: fileID,\n                    projectID: projectID\n                }\n            })\n\n        } catch (err) {\n            console.error(err);\n          }\n        \n    }\n\n    if (!files.length) {\n        return (\n            <h3>No Files Yet</h3>\n        )\n    }\n    return (\n        <>\n            {files && files.map((file) => {\n                return (\n                    <div key={file._id} className=\"folderDiv\">  \n                        <Link className='link' to={`/frontfile/${file._id}`}>\n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFrontFile(file._id);\n                                    window.location.reload()\n                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{file.fileName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n        </>\n    )\n}\n\nexport default FrontEndFileList\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndModal.js",["133","134","135"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_FRONT_END_FILE_TO_PROJECT} from '../../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FrontEndModal() {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addFrontEndFile, { error }] = useMutation(ADD_FRONT_END_FILE_TO_PROJECT)\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addFrontEndFile({\n            variables: {\n              fileName,\n              projectID: projectID,\n            },\n          });\n          setFileName('');\n          setCharacterCount(0)\n          window.location.reload()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })    \n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n  return (\n    <div>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Add a front-end file</h2>\n        \n        <div>I am a modal</div>\n        <form className='addFileForm' onSubmit={handleFormSubmit}>\n            <div className='formContainer'>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n            <div>\n                <button className='button' type='submit'>\n                    Add Folder\n                </button>\n            </div>\n            {error && (\n            <div className=\"errorMessage\">\n                {error.message}\n            </div>\n            )}\n        </form>\n        <button onClick={closeModal}>close</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FrontEndModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEnd.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderInFolderModal.js",["136","137","138","139"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_FOLDER_TO_FOLDER } from '../../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\n// Make sure to bind modal to your appElement (https://reactcommunity.org/react-modal/accessibility/)\nModal.setAppElement('#root');\n\nfunction FolderInFolderModal() {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n\n    const [folderName, setFolderName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { folderID } = useParams()\n\n    const [addFolder, { error }] = useMutation(ADD_FOLDER_TO_FOLDER)\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addFolder({\n            variables: {\n              folderName,\n              projectID: folderID,\n            },\n          });\n          setFolderName('');\n          setCharacterCount(0)\n          window.location.reload()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === 'folderName' && value.length <= 30) {\n            setFolderName(value);\n            setCharacterCount(value.length);\n        }\n    };\n\n  return (\n    <div>\n      <button onClick={openModal}>Add Folder</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add Folder\"\n      >\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Add a folder</h2>\n        \n        <div>I am a modal</div>\n        <form className='addFolderForm' onSubmit={handleFormSubmit}>\n                        <div className='formContainer'>\n                            <input \n                            name='folderName' \n                            placeholder='Folder Name'\n                            value={folderName}\n                            className='projectInput'\n                            onChange={handleChange}\n                            ></input>\n                        </div>\n                        <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n                        Character Count: {characterCount}/30\n                        </p>\n                        <div>\n                            <button className='button' type='submit'>\n                                Add Folder\n                            </button>\n                        </div>\n                        {error && (\n                        <div className=\"errorMessage\">\n                            {error.message}\n                        </div>\n                        )}\n                    </form>\n        <button onClick={closeModal}>close</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default FolderInFolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndModal.js",["140","141","142"],"import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_BACK_END_FILE_TO_PROJECT} from '../../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction BackEndModal() {\n  let subtitle;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addBackEndFile, { error }] = useMutation(ADD_BACK_END_FILE_TO_PROJECT)\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n    \n        try {\n          const { data } = await addBackEndFile({\n            variables: {\n              fileName,\n              projectID: projectID,\n            },\n          });\n          setFileName('');\n          setCharacterCount(0)\n          window.location.reload()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })    \n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n  return (\n    <div>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onAfterOpen={afterOpenModal}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Add a front-end file</h2>\n        \n        <div>I am a modal</div>\n        <form className='addFileForm' onSubmit={handleFormSubmit}>\n            <div className='formContainer'>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n            <div>\n                <button className='button' type='submit'>\n                    Add Folder\n                </button>\n            </div>\n            {error && (\n            <div className=\"errorMessage\">\n                {error.message}\n            </div>\n            )}\n        </form>\n        <button onClick={closeModal}>close</button>\n      </Modal>\n    </div>\n  );\n}\n\nexport default BackEndModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/fileLists/BackEndFileList.js",["143","144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":18},{"ruleId":"150","severity":1,"message":"154","line":1,"column":27,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"155","line":2,"column":31,"nodeType":"152","messageId":"153","endLine":2,"endColumn":41},{"ruleId":"150","severity":1,"message":"156","line":3,"column":20,"nodeType":"152","messageId":"153","endLine":3,"endColumn":31},{"ruleId":"150","severity":1,"message":"157","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":20},{"ruleId":"150","severity":1,"message":"158","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":21},{"ruleId":"150","severity":1,"message":"159","line":28,"column":10,"nodeType":"152","messageId":"153","endLine":28,"endColumn":21},{"ruleId":"150","severity":1,"message":"160","line":28,"column":23,"nodeType":"152","messageId":"153","endLine":28,"endColumn":37},{"ruleId":"150","severity":1,"message":"161","line":29,"column":10,"nodeType":"152","messageId":"153","endLine":29,"endColumn":24},{"ruleId":"150","severity":1,"message":"162","line":29,"column":26,"nodeType":"152","messageId":"153","endLine":29,"endColumn":43},{"ruleId":"150","severity":1,"message":"163","line":17,"column":29,"nodeType":"152","messageId":"153","endLine":17,"endColumn":34},{"ruleId":"150","severity":1,"message":"164","line":23,"column":21,"nodeType":"152","messageId":"153","endLine":23,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":53,"column":33,"nodeType":"167","endLine":57,"endColumn":40},{"ruleId":"150","severity":1,"message":"164","line":24,"column":19,"nodeType":"152","messageId":"153","endLine":24,"endColumn":23},{"ruleId":"150","severity":1,"message":"163","line":14,"column":28,"nodeType":"152","messageId":"153","endLine":14,"endColumn":33},{"ruleId":"150","severity":1,"message":"164","line":20,"column":21,"nodeType":"152","messageId":"153","endLine":20,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":44,"column":25,"nodeType":"167","endLine":48,"endColumn":40},{"ruleId":"150","severity":1,"message":"168","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"156","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":21},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"164","line":55,"column":19,"nodeType":"152","messageId":"153","endLine":55,"endColumn":23},{"ruleId":"150","severity":1,"message":"170","line":82,"column":11,"nodeType":"152","messageId":"153","endLine":82,"endColumn":19},{"ruleId":"150","severity":1,"message":"163","line":14,"column":31,"nodeType":"152","messageId":"153","endLine":14,"endColumn":36},{"ruleId":"150","severity":1,"message":"164","line":21,"column":21,"nodeType":"152","messageId":"153","endLine":21,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":46,"column":25,"nodeType":"167","endLine":50,"endColumn":40},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"164","line":54,"column":19,"nodeType":"152","messageId":"153","endLine":54,"endColumn":23},{"ruleId":"150","severity":1,"message":"164","line":77,"column":22,"nodeType":"152","messageId":"153","endLine":77,"endColumn":26},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"151","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":18},{"ruleId":"150","severity":1,"message":"171","line":10,"column":10,"nodeType":"152","messageId":"153","endLine":10,"endColumn":30},{"ruleId":"150","severity":1,"message":"164","line":56,"column":19,"nodeType":"152","messageId":"153","endLine":56,"endColumn":23},{"ruleId":"150","severity":1,"message":"169","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"164","line":54,"column":19,"nodeType":"152","messageId":"153","endLine":54,"endColumn":23},{"ruleId":"150","severity":1,"message":"164","line":77,"column":22,"nodeType":"152","messageId":"153","endLine":77,"endColumn":26},{"ruleId":"150","severity":1,"message":"163","line":14,"column":30,"nodeType":"152","messageId":"153","endLine":14,"endColumn":35},{"ruleId":"150","severity":1,"message":"164","line":21,"column":21,"nodeType":"152","messageId":"153","endLine":21,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":46,"column":25,"nodeType":"167","endLine":50,"endColumn":40},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'useQuery' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'useMutation' is defined but never used.","'QUERY_USER' is defined but never used.","'ADD_PROJECT' is defined but never used.","'projectName' is assigned a value but never used.","'setProjectName' is assigned a value but never used.","'characterCount' is assigned a value but never used.","'setCharacterCount' is assigned a value but never used.","'error' is assigned a value but never used.","'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useState' is defined but never used.","'ReactDOM' is defined but never used.","'projects' is assigned a value but never used.","'QUERY_SINGLE_PROJECT' is defined but never used.","no-global-assign","no-unsafe-negation"]