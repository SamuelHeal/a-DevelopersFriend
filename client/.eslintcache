[{"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/index.js":"1","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/App.js":"2","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/reportWebVitals.js":"3","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Profile.js":"4","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEnd.js":"5","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/BackEnd.js":"6","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEndFromFolder.js":"7","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/BackEndFromFolder.js":"8","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Signup.js":"9","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Login.js":"10","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Folders.js":"11","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Project.js":"12","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Home.js":"13","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/loginHeader.js":"14","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/index.js":"15","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/auth.js":"16","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/queries.js":"17","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorJS.js":"18","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/mutations.js":"19","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorHTML.js":"20","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorCSS.js":"21","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorBackJS.js":"22","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderInFolderModal.js":"23","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndFolderModal.js":"24","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndFolderModal.js":"25","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderModal.js":"26","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndModal.js":"27","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndModal.js":"28","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/Display.js":"29"},{"size":500,"mtime":1628391474093,"results":"30","hashOfConfig":"31"},{"size":2705,"mtime":1628404828026,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1628391474097,"results":"33","hashOfConfig":"31"},{"size":5592,"mtime":1628498636980,"results":"34","hashOfConfig":"31"},{"size":1834,"mtime":1628557228015,"results":"35","hashOfConfig":"31"},{"size":1454,"mtime":1628553803928,"results":"36","hashOfConfig":"31"},{"size":1851,"mtime":1628557224161,"results":"37","hashOfConfig":"31"},{"size":1471,"mtime":1628553806241,"results":"38","hashOfConfig":"31"},{"size":2491,"mtime":1628549984272,"results":"39","hashOfConfig":"31"},{"size":2789,"mtime":1628549373827,"results":"40","hashOfConfig":"31"},{"size":2275,"mtime":1628552437528,"results":"41","hashOfConfig":"31"},{"size":2064,"mtime":1628552936409,"results":"42","hashOfConfig":"31"},{"size":419,"mtime":1628391474095,"results":"43","hashOfConfig":"31"},{"size":1119,"mtime":1628391474087,"results":"44","hashOfConfig":"31"},{"size":1316,"mtime":1628562543129,"results":"45","hashOfConfig":"31"},{"size":760,"mtime":1628557939243,"results":"46","hashOfConfig":"31"},{"size":1968,"mtime":1628391474098,"results":"47","hashOfConfig":"31"},{"size":2380,"mtime":1628557698507,"results":"48","hashOfConfig":"31"},{"size":5360,"mtime":1628391474097,"results":"49","hashOfConfig":"31"},{"size":2283,"mtime":1628557710570,"results":"50","hashOfConfig":"31"},{"size":2275,"mtime":1628557709656,"results":"51","hashOfConfig":"31"},{"size":2330,"mtime":1628552711623,"results":"52","hashOfConfig":"31"},{"size":5314,"mtime":1628481608297,"results":"53","hashOfConfig":"31"},{"size":5166,"mtime":1628479556672,"results":"54","hashOfConfig":"31"},{"size":5128,"mtime":1628479805050,"results":"55","hashOfConfig":"31"},{"size":5136,"mtime":1628551735842,"results":"56","hashOfConfig":"31"},{"size":5071,"mtime":1628500352487,"results":"57","hashOfConfig":"31"},{"size":5120,"mtime":1628481550442,"results":"58","hashOfConfig":"31"},{"size":1586,"mtime":1628557004390,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"j65y6h",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"62"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"62"},"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/index.js",[],["133","134"],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/App.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/reportWebVitals.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Profile.js",["135","136","137","138"],"import React, { useEffect, useState } from 'react';\nimport { Redirect, useParams, Link  } from 'react-router-dom';\nimport { useQuery, useMutation } from '@apollo/client';\n\nimport { ADD_PROJECT } from '../utils/mutations';\n\n\n\nimport { QUERY_ME } from '../utils/queries';\n\nimport { REMOVE_PROJECT } from '../utils/mutations';\n\n\n\n\nimport './Profile.css'\nimport '../components/projectList/projectList.css'\n\nimport Auth from '../utils/auth';\n\nconst Profile = () => {\n\n  const [currentProjects, setProjects] = useState([]);\n\n  const { username: userParam } = useParams();\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const [removeProject, { removeError }] = useMutation(REMOVE_PROJECT)\n\n  \n  const user = data?.me || {};  \n\n\n\n  useEffect(() => {\n\n    if (!currentProjects.length) {\n      if (data) {\n        setProjects(data.me.projects)\n      }\n    }  \n    \n  }, [data, loading]);\n\n  const [projectName, setProjectName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const [addProject, { error }] = useMutation(ADD_PROJECT)\n   \n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n        const newProject = []\n    \n        try {\n          const { data } = await addProject({\n            variables: {\n              projectName,\n              projectAuthor: Auth.getProfile().data.username,\n            },\n          });\n\n          newProject.push(...currentProjects)\n          newProject.push(data.addProject)\n          setProjectName('');\n          setCharacterCount(0)\n          setProjects(newProject)\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'projectName' && value.length <= 30) {\n          setProjectName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n      const deleteProject = async (projectID) => {\n        try {\n            const { data } = await removeProject({\n                variables: { filter: projectID }\n            })\n\n            const newArray = []\n\n            for (let i = 0; i < currentProjects.length; i++) {\n                if (currentProjects[i]._id !== projectID) {\n                    newArray.push(currentProjects[i])\n\n                }\n            }\n            \n            setProjects(newArray)\n        } catch (err) {\n            console.error(err);\n          }\n        \n    }\n\n\n  if (Auth.loggedIn() && Auth.getProfile().data.username === userParam) {\n    return <Redirect to=\"/me\" />;\n  }\n  \n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  if (!user?.username) {\n    return (\n      <h4>\n        You need to be logged in to see this. Use the navigation links above to\n        sign up or log in!\n      </h4>\n    );\n  }\n\n\n  return (\n    <div>\n      <h2 className=\"headingContainer\">\n          {userParam ? `${user.username}'s` : 'Your'} Projects\n      </h2>\n      <div className='profileContainer'>\n        {!userParam && (\n\n        <div className='formContainer'>\n        <h2>Add a new project</h2>\n\n        {Auth.loggedIn() ? (\n            <>\n              <form className='addProjectForm' onSubmit={handleFormSubmit}>\n                  <div className='formContainer'>\n                      <input \n                      name='projectName' \n                      placeholder='Project Name'\n                      value={projectName}\n                      className='projectInput'\n                      onChange={handleChange}\n                      ></input>\n                  </div>\n                  <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n                  Character Count: {characterCount}/30\n                  </p>\n                  <div>\n                      <button className='button' type='submit'>\n                          Add Project\n                      </button>\n                  </div>\n                  {error && (\n                  <div className=\"errorMessage\">\n                      {error.message}\n                  </div>\n                  )}\n              </form>\n            </>\n        ) : (\n          <p>\n          You need to be logged in to share your thoughts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n        )}\n        </div>\n  \n        )}\n        \n        <div className='mainListContainer'>\n            <div className='listContainer'>\n                {currentProjects && currentProjects.map((project) => (\n                    \n                    <div key={project._id} className='collectionCard'>\n                        <a className='closeButton' onClick={() => {\n                                    deleteProject(project._id);                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                        <Link className='link' to={`/projects/${project._id}`}>\n                     \n                            <div className='cardHeader'>\n                                <p className='createdText'>Created on {project.createdAt}</p>\n                            </div>\n                        \n                        <div className='cardBody'>\n                            <h2>{project.projectName}</h2>\n                        </div>  \n                        </Link>            \n                    </div>\n                    \n                ))}\n            </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEnd.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/BackEnd.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/FrontEndFromFolder.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/BackEndFromFolder.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Signup.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Login.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Folders.js",["139"],"import React from 'react'\nimport './Folder.css'\nimport { Redirect, Link } from 'react-router-dom';\n\nimport '../components/fileLists/FolderList.css'\n\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_FOLDER } from '../utils/queries';\nimport { QUERY_SINGLE_PROJECT} from '../utils/queries';\n\n\nimport Auth from '../utils/auth';\n\n\nimport FolderInFolderModal from '../components/Modal/FolderInFolderModal';\nimport FrontEndFolderModal from '../components/Modal/FrontEndFolderModal'\nimport BackEndFolderModal from '../components/Modal/BackEndFolderModal';\n\n\nfunction Folders() {\n\n    const username = Auth.getProfile().data.username;\n\n    const { folderID } = useParams()\n\n    const { loading, data } = useQuery(QUERY_SINGLE_FOLDER, {\n        variables: { folderID: folderID }\n    })\n\n    const folders = data?.folder || {};   \n\n    \n    const refresh = async (event) => {\n        event.preventDefault()\n        window.location.replace(`/projects/${folders.projectID}`)\n        \n    }\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (username !== folders.folderAuthor){\n        return <Redirect to=\"/me\" />;\n    }\n\n    return (\n        \n        <div className='projectContainer'> \n        <div className='backDiv'>\n            <Link className='folderBackLink'to={`/projects/${folders.projectID}`}>\n                <button onClick={refresh}>Back</button>\n            </Link>\n        </div>\n            \n            <h3 className='projectName'>{folders.folderName}</h3>\n            <div className='fileContainer'>\n                <h3>Folders</h3>\n                <div className='files'>\n                    <FolderInFolderModal />\n                </div>\n\n            </div>\n            <div className='fileContainer'>\n                <h3>Front End Files</h3>\n                <div className='files'>\n                    <FrontEndFolderModal />\n                </div>\n                \n            </div>\n            <div className='fileContainer'>\n                <h3>Back End Files</h3>\n                <div className='files'>\n                    <BackEndFolderModal />\n                    \n                </div>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Folders\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Project.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/pages/Home.js",["140","141","142","143"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Home.css'\n\n\nconst Home = () => {\n  \n\n  return (\n    <main className='homeContainer'>\n      <h1>aDevelopersFriend</h1>\n      <Link to='/login'>\n        <span><a className='spanA'></a></span>\n      </Link>\n      <Link to='/signup'>\n        <span><a className='spanB'></a></span>\n\n      </Link>      \n    </main>\n  );\n};\n\nexport default Home;\n","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/loginHeader.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Header/index.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/auth.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/queries.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorJS.js",["144","145","146"],"import {useState} from 'react'\nimport AceEditor from 'react-ace'\nimport './codeEditor.css'\n// import mode-<language> , this imports the style and colors for the selected language.\nimport 'ace-builds/src-noconflict/mode-javascript'\n// there are many themes to import, I liked monokai.\nimport 'ace-builds/src-noconflict/theme-twilight'\n// this is an optional import just improved the interaction.\nimport 'ace-builds/src-noconflict/ext-language_tools'\nimport 'ace-builds/src-noconflict/ext-beautify'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_JAVASCRIPT_IN_FRONTFILE } from '../../utils/mutations';\n\nfunction EditorJS({\n    javascript,\n    fileID\n}) {\n    const [code, setCode] = useState(javascript)\n\n    const [updateJS, { error }] = useMutation(UPDATE_JAVASCRIPT_IN_FRONTFILE)\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const { data } = await updateJS({\n                variables: {\n                  fileID: fileID,\n                  javascript: code,\n                },\n              });\n              window.location.reload()\n            } catch (err) {\n              console.error(err);\n            }\n        \n    }\n\n\n    return (\n        <div className='editorContainer'>\n            <h5>Javascript</h5>\n\n            <AceEditor\n                style={{\n                    height: '300px',\n                    width: '100%',\n                    minWidth: '200px',\n                    borderRadius: '7px',\n                    padding: '10px',\n                    margin: '10px'\n                }}\n                placeholder='JAVASCRIPT - does not render'\n                mode='javascript'\n                theme='twilight'\n                name='javascript'\n                onChange={currentCode => setCode(currentCode)}\n                fontSize={15}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={code}\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 1,\n                }}\n            />\n\n            <a onClick={handleUpdate}>Save Javascript</a>\n        </div>\n        \n        \n    )\n}\n\nexport default EditorJS","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/utils/mutations.js",[],"/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorHTML.js",["147","148","149"],"import {useState} from 'react'\nimport AceEditor from 'react-ace'\nimport './codeEditor.css'\n// import mode-<language> , this imports the style and colors for the selected language.\nimport 'ace-builds/src-noconflict/mode-html'\n// there are many themes to import, I liked monokai.\nimport 'ace-builds/src-noconflict/theme-twilight'\n// this is an optional import just improved the interaction.\nimport 'ace-builds/src-noconflict/ext-language_tools'\nimport 'ace-builds/src-noconflict/ext-beautify'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_HTML } from '../../utils/mutations';\n\nfunction EditorHTML({\n    html,\n    fileID\n}) {\n    const [code, setCode] = useState(html)\n\n    const [updateHTML, { error }] = useMutation(UPDATE_HTML)\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const { data } = await updateHTML({\n                variables: {\n                  fileID: fileID,\n                  html: code,\n                },\n              });\n              window.location.reload()\n\n            } catch (err) {\n              console.error(err);\n            }\n        \n    }\n    \n\n    return (\n        <div className='editorContainer'>\n            <h5>HTML</h5>\n\n            <AceEditor\n                style={{\n                    height: '300px',\n                    width: '100%',\n                    minWidth: '200px',\n                    borderRadius: '7px',\n                    padding: '10px',\n                    margin: '10px'\n                }}\n                placeholder='HTML'\n                mode='html'\n                theme='twilight'\n                name='html'\n                onChange={currentCode => setCode(currentCode)}\n                fontSize={15}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={code}\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 1,\n                }}\n            />\n\n            <a onClick={handleUpdate}>Save HTML</a>\n        </div>\n        \n        \n    )\n}\n\nexport default EditorHTML","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorCSS.js",["150","151","152"],"import {useState} from 'react'\nimport AceEditor from 'react-ace'\nimport './codeEditor.css'\n// import mode-<language> , this imports the style and colors for the selected language.\nimport 'ace-builds/src-noconflict/mode-javascript'\n// there are many themes to import, I liked monokai.\nimport 'ace-builds/src-noconflict/theme-twilight'\n// this is an optional import just improved the interaction.\nimport 'ace-builds/src-noconflict/ext-language_tools'\nimport 'ace-builds/src-noconflict/ext-beautify'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_CSS } from '../../utils/mutations';\n\nfunction EditorCSS({\n    css,\n    fileID\n}) {\n    const [code, setCode] = useState(css)\n    \n\n    const [updateCSS, { error }] = useMutation(UPDATE_CSS)\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const { data } = await updateCSS({\n                variables: {\n                  fileID: fileID,\n                  css: code,\n                },\n              });\n              window.location.reload()\n\n            } catch (err) {\n              console.error(err);\n            }\n        \n    }\n\n    return (\n        <div className='editorContainer'>\n            <h5>CSS</h5>\n\n            <AceEditor\n                style={{\n                    height: '300px',\n                    width: '100%',\n                    minWidth: '200px',\n                    borderRadius: '7px',\n                    padding: '10px',\n                    margin: '10px'\n                }}\n                placeholder='CSS'\n                mode='css'\n                theme='twilight'\n                name='css'\n                onChange={currentCode => setCode(currentCode)}\n                fontSize={15}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={code}\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 1,\n                }}\n            />\n\n            <a onClick={handleUpdate}>Save CSS</a>\n        </div>\n        \n        \n    )\n}\n\nexport default EditorCSS","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/editorBackJS.js",["153","154","155"],"import {useState} from 'react'\nimport AceEditor from 'react-ace'\nimport './codeEditor.css'\n// import mode-<language> , this imports the style and colors for the selected language.\nimport 'ace-builds/src-noconflict/mode-javascript'\n// there are many themes to import, I liked monokai.\nimport 'ace-builds/src-noconflict/theme-twilight'\n// this is an optional import just improved the interaction.\nimport 'ace-builds/src-noconflict/ext-language_tools'\nimport 'ace-builds/src-noconflict/ext-beautify'\n\nimport { useMutation } from '@apollo/client';\nimport { UPDATE_JAVASCRIPT_IN_BACKFILE } from '../../utils/mutations';\n\nfunction EditorBackJS({\n    javascript,\n    fileID\n}) {\n    const [code, setCode] = useState(javascript)\n\n    const [updateJS, { error }] = useMutation(UPDATE_JAVASCRIPT_IN_BACKFILE)\n\n    const handleUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const { data } = await updateJS({\n                variables: {\n                  fileID: fileID,\n                  javascript: code,\n                },\n              });\n            } catch (err) {\n              console.error(err);\n            }\n        \n    }\n\n\n    return (\n        <div className='editorBackContainer'>\n            <h5>Javascript</h5>\n            <AceEditor\n                style={{\n                    height: '60vh',\n                    width: '60%',\n                    minWidth: '200px',\n                    borderRadius: '7px',\n                    padding: '10px',\n                    margin: '10px'\n                }}\n                placeholder='JAVASCRIPT'\n                mode='javascript'\n                theme='twilight'\n                name='javascript'\n                onChange={currentCode => setCode(currentCode)}\n                fontSize={15}\n                showPrintMargin={true}\n                showGutter={true}\n                highlightActiveLine={true}\n                value={code}\n                setOptions={{\n                    enableBasicAutocompletion: true,\n                    enableLiveAutocompletion: true,\n                    enableSnippets: true,\n                    showLineNumbers: true,\n                    tabSize: 1,\n                }}\n            />\n\n            <a onClick={handleUpdate}>Save Javascript</a>\n        </div>\n        \n        \n    )\n}\n\nexport default EditorBackJS","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderInFolderModal.js",["156","157","158","159","160"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport './modal.css'\n\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_FOLDER} from '../../utils/queries';\nimport { ADD_FOLDER_TO_FOLDER } from '../../utils/mutations';\nimport { REMOVE_FOLDER } from '../../utils/mutations';\n\n\nimport Auth from '../../utils/auth';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FolderInFolderModal() {\n  const [currentFolders, setFolders] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n\n    const [folderName, setFolderName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { folderID } = useParams()\n\n    const { loading, data } = useQuery(QUERY_SINGLE_FOLDER, {\n        variables: { folderID: folderID }\n    })\n\n    const folders = data?.folder.folders || {};   \n\n\n    useEffect(() => {\n\n      if (data) {\n        setFolders(folders)\n      }\n      \n    }, [data, loading]);\n\n    const [addFolder, { error }] = useMutation(ADD_FOLDER_TO_FOLDER)\n    const [removeFolder, { removeError }] = useMutation(REMOVE_FOLDER)\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFolder = []\n\n    \n        try {\n          const { data } = await addFolder({\n            variables: {\n              folderName,\n              folderAuthor: Auth.getProfile().data.username,\n              projectID: folderID,\n            },\n          });\n          newFolder.push(...currentFolders)\n          newFolder.push(data.addFolderToFolder)\n          setFolderName('');\n          setCharacterCount(0)\n          setFolders(newFolder)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n    const handleChange = (event) => {\n        const { name, value } = event.target;\n\n        if (name === 'folderName' && value.length <= 30) {\n            setFolderName(value);\n            setCharacterCount(value.length);\n        }\n    };\n\n    const deleteFolder = async (folderID) => {\n      try {\n          const { data } = await removeFolder({\n              variables: { filter: folderID }\n          })\n          \n          const newArray = []\n\n          for (let i = 0; i < currentFolders.length; i++) {\n              if (currentFolders[i]._id !== folderID) {\n                  newArray.push(currentFolders[i])\n              }\n          }\n          \n          setFolders(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n    if (loading) {\n      return <div>Loading...</div>;\n  }\n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add Folder</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add Folder\"\n      >\n        <h2>Add a folder</h2>\n        \n        <form onSubmit={handleFormSubmit}>\n                        <div>\n                            <input \n                            name='folderName' \n                            placeholder='Folder Name'\n                            value={folderName}\n                            className='projectInput'\n                            onChange={handleChange}\n                            ></input>\n                        </div>\n                        <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n                        Character Count: {characterCount}/30\n                        </p>\n                            <button className='buttonModal' type='submit'>\n                                Add Folder\n                            </button>\n                        {error && (\n                        <div className=\"errorMessage\">\n                            {error.message}\n                        </div>\n                        )}\n                    </form>\n                  <a className='modalClose' onClick={closeModal}>x</a>\n      </Modal>\n      {currentFolders && currentFolders.map((folder) => {\n                return (\n                    <div key={folder._id} name={folder._id} className=\"folderDiv\">  \n                        \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFolder(folder._id);                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/folder/${folder._id}`}>\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{folder.folderName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}    </div>\n  );\n}\n\nexport default FolderInFolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndFolderModal.js",["161","162","163","164","165"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport './modal.css'\n\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { useQuery } from '@apollo/client';\n\n\nimport Auth from '../../utils/auth';\nimport { REMOVE_FRONT_END_FILE_FROM_FOLDER } from '../../utils/mutations';\n\nimport { QUERY_SINGLE_FOLDER} from '../../utils/queries';\nimport { ADD_FRONT_END_FILE_TO_FOLDER } from '../../utils/mutations';\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FrontEndFolderModal() {\n  const [currentFiles, setFiles] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { folderID } = useParams()\n\n    const [addFrontEndFileToFolder, { addError }] = useMutation(ADD_FRONT_END_FILE_TO_FOLDER)\n    const [removeFrontFileFromFolder, { removeError }] = useMutation(REMOVE_FRONT_END_FILE_FROM_FOLDER)\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFile = []\n\n    \n        try {\n          const { data } = await addFrontEndFileToFolder({\n            variables: {\n                fileName,\n                fileAuthor: Auth.getProfile().data.username,\n                projectID: folderID,\n                \n            },\n          });\n          newFile.push(...currentFiles)\n          newFile.push(data.addFrontEndFileToFolder)\n          setFileName('');\n          setCharacterCount(0)\n          setFiles(newFile)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n      const { loading, data } = useQuery(QUERY_SINGLE_FOLDER, {\n        variables: { folderID: folderID }\n    })\n\n    const folders = data?.folder.frontEndFiles || {};   \n\n\n    useEffect(() => {\n\n      if (data) {\n        setFiles(folders)\n      }\n      \n    }, [data, loading]);\n\n    const deleteFrontFileFromFolder = async (fileID) => {\n      try {\n          const { data } = await removeFrontFileFromFolder({\n              variables: { \n                  filter: fileID,\n                  projectID: folderID\n              }\n          })\n\n          const newArray = []\n\n          for (let i = 0; i < currentFiles.length; i++) {\n              if (currentFiles[i]._id !== fileID) {\n                  newArray.push(currentFiles[i])\n\n              }\n          }\n          \n          setFiles(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n    \n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2>Add a front-end file</h2>\n        \n        <form onSubmit={handleFormSubmit}>\n            <div>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || addError ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n    \n            <button className='buttonModal' type='submit'>\n                Add Folder\n            </button>\n            \n            {addError && (\n            <div className=\"errorMessage\">\n                {addError.message}\n            </div>\n            )}\n        </form>\n        <a className='modalFrontClose' onClick={closeModal}>x</a>\n      </Modal>\n      {currentFiles && currentFiles.map((file) => {\n                return (\n                    <div key={file._id} className=\"folderDiv\">  \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFrontFileFromFolder(file._id);\n                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/folderfrontfile/${file._id}`}>\n\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{file.fileName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n    </div>\n  );\n}\n\nexport default FrontEndFolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndFolderModal.js",["166","167","168","169","170"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport './modal.css'\n\nimport { useQuery } from '@apollo/client';\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_FOLDER} from '../../utils/queries';\nimport { ADD_BACK_END_FILE_TO_FOLDER } from '../../utils/mutations';\nimport { REMOVE_BACK_END_FILE_FROM_FOLDER } from '../../utils/mutations';\n\n\nimport Auth from '../../utils/auth';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FrontEndFolderModal() {\n  const [currentFiles, setFiles] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { folderID } = useParams()\n\n    const [addBackEndFileToFolder, { error }] = useMutation(ADD_BACK_END_FILE_TO_FOLDER)\n    const [removeBackFileFromFolder, { removeError }] = useMutation(REMOVE_BACK_END_FILE_FROM_FOLDER)\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFile = []\n\n    \n        try {\n          const { data } = await addBackEndFileToFolder({\n            variables: {\n                fileName,\n                fileAuthor: Auth.getProfile().data.username,\n                projectID: folderID,\n                \n            },\n          });\n          newFile.push(...currentFiles)\n          newFile.push(data.addBackEndFileToFolder)\n          setFileName('');\n          setCharacterCount(0)\n          setFiles(newFile)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n      const { loading, data } = useQuery(QUERY_SINGLE_FOLDER, {\n        variables: { folderID: folderID }\n    })\n\n    const folders = data?.folder.backEndFiles || {};   \n\n\n    useEffect(() => {\n\n      if (data) {\n        setFiles(folders)\n      }\n      \n    }, [data, loading]);\n\n    const deleteBackFileFromFolder = async (fileID) => {\n      try {\n          const { data } = await removeBackFileFromFolder({\n              variables: { \n                  filter: fileID,\n                  projectID: folderID\n              }\n          })\n\n          const newArray = []\n\n          for (let i = 0; i < currentFiles.length; i++) {\n              if (currentFiles[i]._id !== fileID) {\n                  newArray.push(currentFiles[i])\n\n              }\n          }\n          \n          setFiles(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2>Add a back-end file</h2>\n        \n        <form onSubmit={handleFormSubmit}>\n            <div>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n                <button className='buttonModal' type='submit'>\n                    Add Folder\n                </button>\n            {error && (\n            <div className=\"errorMessage\">\n                {error.message}\n            </div>\n            )}\n        </form>\n        <a className='modalFrontClose' onClick={closeModal}>x</a>\n      </Modal>\n      {currentFiles && currentFiles.map((file) => {\n                return (\n                    <div key={file._id} className=\"folderDiv\">  \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteBackFileFromFolder(file._id);                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/folderbackfile/${file._id}`}>\n\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{file.fileName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n    </div>\n  );\n}\n\nexport default FrontEndFolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FolderModal.js",["171","172","173","174","175"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport './modal.css'\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_FOLDER_TO_PROJECT } from '../../utils/mutations';\nimport { REMOVE_FOLDER } from '../../utils/mutations';\n\n\nimport Auth from '../../utils/auth';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    \n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FolderModal() {\n\n  const [currentFolders, setFolders] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  const [removeFolder, { removeError }] = useMutation(REMOVE_FOLDER)\n\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [folderName, setFolderName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addFolder, { addError }] = useMutation(ADD_FOLDER_TO_PROJECT)\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFolder = []\n\n    \n        try {\n          const { data } = await addFolder({\n            variables: {\n              folderName,\n              folderAuthor: Auth.getProfile().data.username,\n              projectID: projectID,\n            },\n          });\n          newFolder.push(...currentFolders)\n          newFolder.push(data.addFolderToProject)\n          setFolderName('');\n          setCharacterCount(0)\n          setFolders(newFolder)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'folderName' && value.length <= 30) {\n            setFolderName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })    \n\n    \n    const projects = data?.project || {};\n\n    useEffect(() => {\n\n      if (data) {\n  \n        setFolders(projects.folders)\n  \n      }\n      \n    }, [data, loading]);\n\n    const deleteFolder = async (folderID) => {\n      try {\n          const { data } = await removeFolder({\n              variables: { filter: folderID }\n          })\n          \n          const newArray = []\n\n          for (let i = 0; i < currentFolders.length; i++) {\n              if (currentFolders[i]._id !== folderID) {\n                  newArray.push(currentFolders[i])\n              }\n          }\n          \n          setFolders(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add Folder</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add Folder\"\n      >\n        <h2>Add a folder</h2>\n        \n            <form onSubmit={handleFormSubmit}>\n            <div>\n                <input \n                name='folderName' \n                placeholder='Folder Name'\n                value={folderName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || addError ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n            \n            <button type='submit'>\n                Add Folder\n            </button>\n            \n            {addError && (\n            <div className=\"errorMessage\">\n                {addError.message}\n            </div>\n            )}\n        </form>\n        <a className='modalClose' onClick={closeModal}>x</a>\n      </Modal>\n      <div className='wrapping'>\n      {currentFolders && currentFolders.map((folder) => {\n                return (\n                    <div key={folder._id} name={folder._id} className=\"folderDiv\">  \n                        \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFolder(folder._id);                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/folder/${folder._id}`}>\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{folder.folderName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n      </div>\n      \n\n\n\n\n    </div>\n  );\n}\n\nexport default FolderModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/BackEndModal.js",["176","177","178","179","180"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\nimport './modal.css'\n\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_BACK_END_FILE_TO_PROJECT} from '../../utils/mutations';\nimport { REMOVE_BACK_END_FILE } from '../../utils/mutations';\n\n\nimport Auth from '../../utils/auth';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction BackEndModal() {\n  const [currentFiles, setFiles] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addBackEndFile, { error }] = useMutation(ADD_BACK_END_FILE_TO_PROJECT)\n    const [removeBackFile, { removeError }] = useMutation(REMOVE_BACK_END_FILE)\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFile = []\n\n    \n        try {\n          const { data } = await addBackEndFile({\n            variables: {\n              fileName,\n              fileAuthor: Auth.getProfile().data.username,\n              projectID: projectID,\n            },\n          });\n          newFile.push(...currentFiles)\n          newFile.push(data.addBackEndFileToProject)\n          setFileName('');\n          setCharacterCount(0)\n          setFiles(newFile)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })    \n\n    const projects = data?.project || {};\n\n    useEffect(() => {\n\n      if (data) {\n  \n        setFiles(projects.backEndFiles)\n  \n      }\n      \n    }, [data, loading]);\n\n    const deleteBackFile = async (fileID) => {\n      try {\n          const { data } = await removeBackFile({\n              variables: { \n                  filter: fileID,\n                  projectID: projectID\n              }\n          })\n\n          const newArray = []\n\n          for (let i = 0; i < currentFiles.length; i++) {\n              if (currentFiles[i]._id !== fileID) {\n                  newArray.push(currentFiles[i])\n\n              }\n          }\n          \n          setFiles(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2>Add a back-end file</h2>\n        \n        <form onSubmit={handleFormSubmit}>\n            <div>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || error ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n            \n                <button className='button' type='submit'>\n                    Add Folder\n                </button>\n            \n            {error && (\n            <div className=\"errorMessage\">\n                {error.message}\n            </div>\n            )}\n        </form>\n        <a className='modalFrontClose' onClick={closeModal}>x</a>\n      </Modal>\n      {currentFiles && currentFiles.map((file) => {\n                return (\n                    <div key={file._id} className=\"folderDiv\">  \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteBackFile(file._id);\n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/backfile/${file._id}`}>\n\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{file.fileName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n\n    </div>\n  );\n}\n\nexport default BackEndModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/Modal/FrontEndModal.js",["181","182","183","184","185"],"import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport './modal.css'\n\n\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { useMutation } from '@apollo/client';\n\n\nimport { QUERY_SINGLE_PROJECT} from '../../utils/queries';\nimport { ADD_FRONT_END_FILE_TO_PROJECT} from '../../utils/mutations';\nimport { REMOVE_FRONT_END_FILE } from '../../utils/mutations';\n\n\nimport Auth from '../../utils/auth';\n\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n  },\n};\n\nModal.setAppElement('#root');\n\nfunction FrontEndModal() {\n  const [currentFiles, setFiles] = useState([]);\n\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n\n  function openModal() {\n    setIsOpen(true);\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n    const [fileName, setFileName] = useState('')\n    const [characterCount, setCharacterCount] = useState(0)\n\n    const { projectID } = useParams()\n\n    const [addFrontEndFile, { addError }] = useMutation(ADD_FRONT_END_FILE_TO_PROJECT)\n    const [removeFrontFile, { removeError }] = useMutation(REMOVE_FRONT_END_FILE)\n\n\n    const handleFormSubmit = async (event) => {\n        event.preventDefault();\n\n        const newFile = []\n\n    \n        try {\n          const { data } = await addFrontEndFile({\n            variables: {\n              fileName,\n              fileAuthor: Auth.getProfile().data.username,\n              projectID,\n            },\n          });\n          newFile.push(...currentFiles)\n          newFile.push(data.addFrontEndFileToProject)\n          setFileName('');\n          setCharacterCount(0)\n          setFiles(newFile)\n          closeModal()\n        } catch (err) {\n          console.error(err);\n        }\n      };\n\n      const handleChange = (event) => {\n        const { name, value } = event.target;\n    \n        if (name === 'fileName' && value.length <= 30) {\n            setFileName(value);\n          setCharacterCount(value.length);\n        }\n      };\n\n    const { loading, data } = useQuery(QUERY_SINGLE_PROJECT, {\n        variables: { projectID: projectID }\n    })    \n\n    const projects = data?.project || {};\n\n    useEffect(() => {\n\n      if (data) {\n  \n        setFiles(projects.frontEndFiles)\n  \n      }\n      \n    }, [data, loading]);\n\n    const deleteFrontFile = async (fileID) => {\n      try {\n          const { data } = await removeFrontFile({\n              variables: { \n                  filter: fileID,\n                  projectID: projectID\n              }\n          })\n\n          const newArray = []\n\n          for (let i = 0; i < currentFiles.length; i++) {\n              if (currentFiles[i]._id !== fileID) {\n                  newArray.push(currentFiles[i])\n\n              }\n          }\n          \n          setFiles(newArray)\n\n      } catch (err) {\n          console.error(err);\n        }\n      \n  }\n\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n \n\n  return (\n    <div className='modalContainer'>\n      <button onClick={openModal}>Add File</button>\n      <Modal\n        isOpen={modalIsOpen}\n        onRequestClose={closeModal}\n        style={customStyles}\n        contentLabel=\"Add File\"\n      >\n        <h2>Add a front-end file</h2>\n        \n        <form onSubmit={handleFormSubmit}>\n            <div>\n                <input \n                name='fileName' \n                placeholder='File Name'\n                value={fileName}\n                className='projectInput'\n                onChange={handleChange}\n                ></input>\n            </div>\n            <p className={`characterCount ${characterCount === 30 || addError ? 'text-danger' : ''}`}>\n            Character Count: {characterCount}/30\n            </p>\n                <button className='button' type='submit'>\n                    Add Folder\n                </button>\n            {addError && (\n            <div className=\"errorMessage\">\n                {addError.message}\n            </div>\n            )}\n        </form>\n        <a className='modalFrontClose' onClick={closeModal}>x</a>\n      </Modal>\n      {currentFiles && currentFiles.map((file) => {\n                return (\n                  \n                    <div key={file._id} className=\"folderDiv\">  \n                        <div className='folderHeader'>\n                        <a className='closeButtonFolder' onClick={() => {\n                                    deleteFrontFile(file._id);\n                                    \n                                    }}>\n                                    <i className=\"fi-rr-cross-small\"></i>\n                                </a>\n                    </div> \n                    <Link className='link' to={`/frontfile/${file._id}`}>\n\n                    <i className=\"fi-rr-folder icon\">\n                    </i>  \n                    <h3>{file.fileName}</h3>\n\n                    </Link>\n                </div>\n               \n                )\n                \n            })}\n    </div>\n  );\n}\n\nexport default FrontEndModal","/Users/samuelheal/Desktop/Bootcamp/Bootcamp_Projects/a-DevelopersFriend/client/src/components/codeEditor/Display.js",["186","187","188","189","190"],"import React from 'react'\nimport ReactDOM from 'react-dom';\n\n\nimport ReactHtmlParser, { processNodes, convertNodeToElement, htmlparser2 } from 'react-html-parser';\nimport Style from 'style-it';\n\nimport './codeEditor.css'\n\n\nimport { QUERY_FRONT_END_FILE } from '../../utils/queries'\n\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nfunction FrontEnd() {\n\n    const { fileID } = useParams()\n\n\n    const { loading, data } = useQuery(QUERY_FRONT_END_FILE, {\n        variables: { fileID }\n    })\n\n    console.log(data)\n\n    const html = data.frontEndFile.html\n    const css = data.frontEndFile.css\n\n    function renderHTML() {\n        return (\n            <> \n                {ReactHtmlParser(html)}\n            </>\n        )\n    }\n\n    function renderCSS() {\n        return (\n            <Style>\n                {css}\n                <div>\n                    {renderHTML().props.children}\n                </div>\n            </Style>\n            \n        )\n    }\n\n    class Render extends React.Component {\n        render() {\n            return Style.it (\n                this.props.cssText,\n                <div>\n                    {renderHTML().props.children}\n                </div>\n            )\n        }\n    }\n\n    console.log(renderHTML().props.children)\n\n    console.log(css)\n\n\n    if (loading) {\n        return (\n            <h1>loading...</h1>\n        )\n    }\n\n    \n\n    return (\n        <div className='renderContainer'>\n            \n                <Render cssText={css} />\n            \n        </div>\n    )\n}\n\nexport default FrontEnd\n",{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","severity":1,"message":"196","line":28,"column":27,"nodeType":"197","messageId":"198","endLine":28,"endColumn":38},{"ruleId":"199","severity":1,"message":"200","line":43,"column":6,"nodeType":"201","endLine":43,"endColumn":21,"suggestions":"202"},{"ruleId":"195","severity":1,"message":"203","line":84,"column":21,"nodeType":"197","messageId":"198","endLine":84,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":176,"column":25,"nodeType":"206","endLine":178,"endColumn":40},{"ruleId":"195","severity":1,"message":"207","line":13,"column":10,"nodeType":"197","messageId":"198","endLine":13,"endColumn":30},{"ruleId":"208","severity":1,"message":"209","line":14,"column":15,"nodeType":"206","endLine":14,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":14,"column":15,"nodeType":"206","endLine":14,"endColumn":36},{"ruleId":"208","severity":1,"message":"209","line":17,"column":15,"nodeType":"206","endLine":17,"endColumn":36},{"ruleId":"204","severity":1,"message":"205","line":17,"column":15,"nodeType":"206","endLine":17,"endColumn":36},{"ruleId":"195","severity":1,"message":"210","line":21,"column":24,"nodeType":"197","messageId":"198","endLine":21,"endColumn":29},{"ruleId":"195","severity":1,"message":"203","line":26,"column":21,"nodeType":"197","messageId":"198","endLine":26,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":72,"column":13,"nodeType":"206","endLine":72,"endColumn":39},{"ruleId":"195","severity":1,"message":"210","line":21,"column":26,"nodeType":"197","messageId":"198","endLine":21,"endColumn":31},{"ruleId":"195","severity":1,"message":"203","line":26,"column":21,"nodeType":"197","messageId":"198","endLine":26,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":73,"column":13,"nodeType":"206","endLine":73,"endColumn":39},{"ruleId":"195","severity":1,"message":"210","line":22,"column":25,"nodeType":"197","messageId":"198","endLine":22,"endColumn":30},{"ruleId":"195","severity":1,"message":"203","line":27,"column":21,"nodeType":"197","messageId":"198","endLine":27,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":73,"column":13,"nodeType":"206","endLine":73,"endColumn":39},{"ruleId":"195","severity":1,"message":"210","line":21,"column":24,"nodeType":"197","messageId":"198","endLine":21,"endColumn":29},{"ruleId":"195","severity":1,"message":"203","line":26,"column":21,"nodeType":"197","messageId":"198","endLine":26,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":70,"column":13,"nodeType":"206","endLine":70,"endColumn":39},{"ruleId":"199","severity":1,"message":"211","line":65,"column":8,"nodeType":"201","endLine":65,"endColumn":23,"suggestions":"212"},{"ruleId":"195","severity":1,"message":"196","line":68,"column":28,"nodeType":"197","messageId":"198","endLine":68,"endColumn":39},{"ruleId":"195","severity":1,"message":"203","line":107,"column":19,"nodeType":"197","messageId":"198","endLine":107,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":164,"column":19,"nodeType":"206","endLine":164,"endColumn":66},{"ruleId":"204","severity":1,"message":"205","line":171,"column":25,"nodeType":"206","endLine":173,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":51,"column":41,"nodeType":"197","messageId":"198","endLine":51,"endColumn":52},{"ruleId":"199","severity":1,"message":"211","line":102,"column":8,"nodeType":"201","endLine":102,"endColumn":23,"suggestions":"213"},{"ruleId":"195","severity":1,"message":"203","line":106,"column":19,"nodeType":"197","messageId":"198","endLine":106,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":167,"column":9,"nodeType":"206","endLine":167,"endColumn":61},{"ruleId":"204","severity":1,"message":"205","line":173,"column":25,"nodeType":"206","endLine":176,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":52,"column":40,"nodeType":"197","messageId":"198","endLine":52,"endColumn":51},{"ruleId":"199","severity":1,"message":"211","line":103,"column":8,"nodeType":"201","endLine":103,"endColumn":23,"suggestions":"214"},{"ruleId":"195","severity":1,"message":"203","line":107,"column":19,"nodeType":"197","messageId":"198","endLine":107,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":164,"column":9,"nodeType":"206","endLine":164,"endColumn":61},{"ruleId":"204","severity":1,"message":"205","line":170,"column":25,"nodeType":"206","endLine":172,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":37,"column":26,"nodeType":"197","messageId":"198","endLine":37,"endColumn":37},{"ruleId":"199","severity":1,"message":"215","line":104,"column":8,"nodeType":"201","endLine":104,"endColumn":23,"suggestions":"216"},{"ruleId":"195","severity":1,"message":"203","line":108,"column":19,"nodeType":"197","messageId":"198","endLine":108,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":169,"column":9,"nodeType":"206","endLine":169,"endColumn":56},{"ruleId":"204","severity":1,"message":"205","line":177,"column":25,"nodeType":"206","endLine":179,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":52,"column":30,"nodeType":"197","messageId":"198","endLine":52,"endColumn":41},{"ruleId":"199","severity":1,"message":"217","line":103,"column":8,"nodeType":"201","endLine":103,"endColumn":23,"suggestions":"218"},{"ruleId":"195","severity":1,"message":"203","line":107,"column":19,"nodeType":"197","messageId":"198","endLine":107,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":170,"column":9,"nodeType":"206","endLine":170,"endColumn":61},{"ruleId":"204","severity":1,"message":"205","line":176,"column":25,"nodeType":"206","endLine":178,"endColumn":40},{"ruleId":"195","severity":1,"message":"196","line":51,"column":31,"nodeType":"197","messageId":"198","endLine":51,"endColumn":42},{"ruleId":"199","severity":1,"message":"219","line":102,"column":8,"nodeType":"201","endLine":102,"endColumn":23,"suggestions":"220"},{"ruleId":"195","severity":1,"message":"203","line":106,"column":19,"nodeType":"197","messageId":"198","endLine":106,"endColumn":23},{"ruleId":"204","severity":1,"message":"205","line":170,"column":9,"nodeType":"206","endLine":170,"endColumn":61},{"ruleId":"204","severity":1,"message":"205","line":177,"column":25,"nodeType":"206","endLine":180,"endColumn":40},{"ruleId":"195","severity":1,"message":"221","line":2,"column":8,"nodeType":"197","messageId":"198","endLine":2,"endColumn":16},{"ruleId":"195","severity":1,"message":"222","line":5,"column":27,"nodeType":"197","messageId":"198","endLine":5,"endColumn":39},{"ruleId":"195","severity":1,"message":"223","line":5,"column":41,"nodeType":"197","messageId":"198","endLine":5,"endColumn":61},{"ruleId":"195","severity":1,"message":"224","line":5,"column":63,"nodeType":"197","messageId":"198","endLine":5,"endColumn":74},{"ruleId":"195","severity":1,"message":"225","line":38,"column":14,"nodeType":"197","messageId":"198","endLine":38,"endColumn":23},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"no-unused-vars","'removeError' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentProjects.length'. Either include it or remove the dependency array.","ArrayExpression",["228"],"'data' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'QUERY_SINGLE_PROJECT' is defined but never used.","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'folders'. Either include it or remove the dependency array.",["229"],["230"],["231"],"React Hook useEffect has a missing dependency: 'projects.folders'. Either include it or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'projects.backEndFiles'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'projects.frontEndFiles'. Either include it or remove the dependency array.",["234"],"'ReactDOM' is defined but never used.","'processNodes' is defined but never used.","'convertNodeToElement' is defined but never used.","'htmlparser2' is defined but never used.","'renderCSS' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"237","fix":"239"},{"desc":"237","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [currentProjects.length, data, loading]",{"range":"247","text":"248"},"Update the dependencies array to be: [data, folders, loading]",{"range":"249","text":"250"},{"range":"251","text":"250"},{"range":"252","text":"250"},"Update the dependencies array to be: [data, loading, projects.folders]",{"range":"253","text":"254"},"Update the dependencies array to be: [data, loading, projects.backEndFiles]",{"range":"255","text":"256"},"Update the dependencies array to be: [data, loading, projects.frontEndFiles]",{"range":"257","text":"258"},[864,879],"[currentProjects.length, data, loading]",[1340,1355],"[data, folders, loading]",[2465,2480],[2454,2469],[2381,2396],"[data, loading, projects.folders]",[2389,2404],"[data, loading, projects.backEndFiles]",[2390,2405],"[data, loading, projects.frontEndFiles]"]